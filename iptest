#!/bin/bash

# MEXC IP Separation Test Script
# Tests that each container uses a different IP address via Tor proxy

echo "üîç MEXC IP Separation Verification"
echo "==================================="
echo ""

# Check if containers are running
echo "üìã Checking container status..."
containers=$(docker-compose ps -q btc-client eth-client sol-client)
if [ -z "$containers" ]; then
    echo "‚ùå No client containers are running. Start deployment first:"
    echo "   docker-compose up -d"
    exit 1
fi

# Activate virtual environment if needed for external IP check
if [ -f "venv/bin/activate" ]; then
    source venv/bin/activate
fi

echo "üåê Testing IP separation for each container..."
echo ""

# Array to store container IPs
declare -A container_ips
container_names=("mexc-btc-client" "mexc-eth-client" "mexc-sol-client")

for container in "${container_names[@]}"; do
    # Check if container is running
    if ! docker ps --format '{{.Names}}' | grep -q "^${container}$"; then
        echo "  ${container}: Not running"
        continue
    fi
    
    echo "Testing ${container}..."
    
    # Get the container's IP as seen by external services (via Tor proxy)
    ip_result=$(docker exec "$container" timeout 10 curl --socks4 127.0.0.1:9050 -s https://ipinfo.io/ip 2>/dev/null)
    
    if [ $? -eq 0 ] && [ -n "$ip_result" ]; then
        container_ips["$container"]="$ip_result"
        
        # Get location info
        location_result=$(docker exec "$container" timeout 10 curl --socks4 127.0.0.1:9050 -s "https://ipinfo.io/${ip_result}" 2>/dev/null)
        
        if [ $? -eq 0 ] && [ -n "$location_result" ]; then
            city=$(echo "$location_result" | grep '"city"' | cut -d'"' -f4)
            country=$(echo "$location_result" | grep '"country"' | cut -d'"' -f4)
            location="${city:-Unknown}, ${country:-Unknown}"
        else
            location="Unknown"
        fi
        
        symbol=$(echo "$container" | cut -d'-' -f2 | tr '[:lower:]' '[:upper:]')
        echo "  ‚úÖ ${symbol} Container (${container}):"
        echo "     IP: ${ip_result}"
        echo "     Location: ${location}"
        echo ""
    else
        echo "  ‚ùå ${container}: Failed to get IP via proxy"
        echo ""
    fi
done

echo "üìä IP Separation Analysis:"
echo "=========================="

# Check if we got any IPs
if [ ${#container_ips[@]} -eq 0 ]; then
    echo "‚ùå No container IPs could be verified"
    echo ""
    echo "üîß Troubleshooting:"
    echo "  - Check if containers are running: docker-compose ps"
    echo "  - Check Tor proxy status: docker-compose logs btc-client | grep -i tor"
    echo "  - Restart containers: docker-compose restart"
    exit 1
fi

# Display all detected IPs
echo "Detected container IPs:"
for container in "${!container_ips[@]}"; do
    symbol=$(echo "$container" | cut -d'-' -f2 | tr '[:lower:]' '[:upper:]')
    echo "  ${symbol}: ${container_ips[$container]}"
done
echo ""

# Check for uniqueness
unique_ips=($(printf '%s\n' "${container_ips[@]}" | sort -u))
total_containers=${#container_ips[@]}
unique_count=${#unique_ips[@]}

if [ "$unique_count" -eq "$total_containers" ] && [ "$total_containers" -ge 2 ]; then
    echo "‚úÖ IP Separation Success: ${unique_count} unique IPs detected"
    echo "   Each container appears to MEXC with a different IP address"
    echo "   ‚úÖ MEXC API compliance: Multiple sub.depth.full subscriptions supported"
elif [ "$unique_count" -lt "$total_containers" ]; then
    echo "‚ö†Ô∏è  Warning: ${unique_count} unique IPs from ${total_containers} containers"
    echo "   Some containers may share IP addresses"
    echo "   ‚ö†Ô∏è  MEXC API impact: May not support multiple sub.depth.full subscriptions"
else
    echo "‚ÑπÔ∏è  Note: ${unique_count} container(s) detected with unique IPs"
fi

echo ""
echo "üéØ Expected for MEXC compliance:"
echo "  - Each cryptocurrency client should have a different IP"
echo "  - This allows multiple sub.depth.full WebSocket subscriptions"
echo "  - Tor proxy provides automatic IP separation without VPN credentials"