services:
  clickhouse:
    image: clickhouse/clickhouse-server:24.3-alpine
    container_name: clickhouse
    ports:
      - "8123:8123"  # HTTP interface
      - "9000:9000"  # Native client interface
    volumes:
      - ch_mexc:/var/lib/clickhouse
      - ./clickhouse.xml:/etc/clickhouse-server/config.d/custom-config.xml:ro
    environment:
      CLICKHOUSE_DB: mexc_data
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: ""
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - mexc-network

  # Database setup service - runs once to initialize tables
  setup:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: setup-ch
    user: "1000:1000"
    environment:
      - CONTAINER_TYPE=setup-ch
      - CLICKHOUSE_HOST=clickhouse
    depends_on:
      clickhouse:
        condition: service_healthy
    command: python3 setup-ch.py
    networks:
      - mexc-network
    restart: "no"  # Only run once

  # BTC client with proxy separation
  client-btc:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: client-btc
    user: "1000:1000"
    environment:
      - CONTAINER_TYPE=client-btc
      - CLICKHOUSE_HOST=clickhouse
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    devices:
      - /dev/net/tun:/dev/net/tun
    sysctls:
      - net.ipv4.conf.all.rp_filter=2
      - net.ipv6.conf.all.disable_ipv6=0
    depends_on:
      setup:
        condition: service_completed_successfully
      clickhouse:
        condition: service_healthy
    command: python3 client-btc.py
    networks:
      - mexc-network
    restart: unless-stopped
    # Add startup delay to ensure setup is complete
    healthcheck:
      test: ["CMD", "python3", "-c", "import requests; requests.get('https://ipinfo.io/ip', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # ETH client with proxy separation
  client-eth:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: client-eth
    user: "1000:1000"
    environment:
      - CONTAINER_TYPE=client-eth
      - CLICKHOUSE_HOST=clickhouse
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    devices:
      - /dev/net/tun:/dev/net/tun
    sysctls:
      - net.ipv4.conf.all.rp_filter=2
      - net.ipv6.conf.all.disable_ipv6=0
    depends_on:
      setup:
        condition: service_completed_successfully
      clickhouse:
        condition: service_healthy
    command: python3 client-eth.py
    networks:
      - mexc-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python3", "-c", "import requests; requests.get('https://ipinfo.io/ip', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # SOL client with proxy separation
  client-sol:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: client-sol
    user: "1000:1000"
    environment:
      - CONTAINER_TYPE=client-sol
      - CLICKHOUSE_HOST=clickhouse
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    devices:
      - /dev/net/tun:/dev/net/tun
    sysctls:
      - net.ipv4.conf.all.rp_filter=2
      - net.ipv6.conf.all.disable_ipv6=0
    depends_on:
      setup:
        condition: service_completed_successfully
      clickhouse:
        condition: service_healthy
    command: python3 client-sol.py
    networks:
      - mexc-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python3", "-c", "import requests; requests.get('https://ipinfo.io/ip', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Hourly data exporter service
  exporter:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: exporter
    user: "1000:1000"
    environment:
      - CONTAINER_TYPE=exporter
      - CLICKHOUSE_HOST=clickhouse
      - EXPORT_DEBUG_MODE=false  # Set to 'false' for production hourly mode
    volumes:
      - ./exports:/exports  # Mount local exports directory
    depends_on:
      clickhouse:
        condition: service_healthy
      setup:
        condition: service_completed_successfully
    command: python3 exporter.py
    networks:
      - mexc-network
    restart: unless-stopped

volumes:
  ch_mexc:
    driver: local

networks:
  mexc-network:
    driver: bridge